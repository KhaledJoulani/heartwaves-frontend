[{"C:\\Users\\naor\\heartwaves-frontend\\src\\reportWebVitals.js":"1","C:\\Users\\naor\\heartwaves-frontend\\src\\App.js":"2","C:\\Users\\naor\\heartwaves-frontend\\src\\components\\UserResults.jsx":"3","C:\\Users\\naor\\heartwaves-frontend\\src\\components\\Signup.jsx":"4","C:\\Users\\naor\\heartwaves-frontend\\src\\components\\Login.jsx":"5","C:\\Users\\naor\\heartwaves-frontend\\src\\index.js":"6","C:\\Users\\naor\\heartwaves-frontend\\src\\components\\Dashboard.jsx":"7","C:\\Users\\naor\\heartwaves-frontend\\src\\components\\HomePage.jsx":"8","C:\\Users\\naor\\heartwaves-frontend\\src\\libs\\HeartContext.jsx":"9","C:\\Users\\naor\\heartwaves-frontend\\src\\components\\Home.jsx":"10","C:\\Users\\naor\\heartwaves-frontend\\src\\components\\Result.jsx":"11"},{"size":375,"mtime":1611131421924,"results":"12","hashOfConfig":"13"},{"size":182,"mtime":1611146483660,"results":"14","hashOfConfig":"13"},{"size":862,"mtime":1611138972621,"results":"15","hashOfConfig":"13"},{"size":10053,"mtime":1611154815656,"results":"16","hashOfConfig":"13"},{"size":3023,"mtime":1611154804885,"results":"17","hashOfConfig":"13"},{"size":517,"mtime":1611131421923,"results":"18","hashOfConfig":"13"},{"size":827,"mtime":1611139031018,"results":"19","hashOfConfig":"13"},{"size":4594,"mtime":1611163360204,"results":"20","hashOfConfig":"13"},{"size":88,"mtime":1611134898950,"results":"21","hashOfConfig":"13"},{"size":345,"mtime":1611163175681,"results":"22","hashOfConfig":"13"},{"size":843,"mtime":1611144404436,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"soenco",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\naor\\heartwaves-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\naor\\heartwaves-frontend\\src\\App.js",[],"C:\\Users\\naor\\heartwaves-frontend\\src\\components\\UserResults.jsx",["48"],"C:\\Users\\naor\\heartwaves-frontend\\src\\components\\Signup.jsx",["49","50","51","52","53","54"],"import React, { useState, useContext, useEffect } from 'react'\r\n// import Modal from 'react-modal'\r\nimport { HeartContext } from '../libs/HeartContext'\r\nimport { useHistory } from 'react-router-dom'\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport \"./homePage.css\";\r\n\r\n// import heartSignup from '../images/heartSignup.png'\r\n\r\nfunction Signup() {\r\n    const { setIsLogin, errorMessage, setErrorMessage, \r\n        setFirstName, loading, setLoading } = useContext(HeartContext);\r\nconst [ userProfile, setUserProfile ] = useState({firstName: '', lastName: '', phoneNumber: '',\r\n    password:'', email:'' });\r\nconst [ isOpen, setIsOpen ] = useState( false );\r\nconst [ confirmPassword, setConfirmPassword ] = useState('');\r\nconst [ message, setMessage ] = useState('')\r\nconst history = useHistory()\r\n\r\nconst handleChange = (event) => {    \r\n    setUserProfile((userProfile) => ({ ...userProfile, [event.target.name]: event.target.value }))\r\n}\r\n\r\nconst handleModal = () => {\r\n    setIsOpen( true )\r\n}\r\n\r\nconst handleModalClose = () => {\r\n    setIsOpen( false )\r\n    // event.preventDefault();\r\n    // setUserProfile({firstName: '', lastName: '', phoneNumber: '',\r\n    //         password:'', email:''});\r\n    // setConfirmPassword('');\r\n    // setErrorMessage( false )\r\n}\r\n\r\n// const checkPassword = async () => {\r\n//     if(userProfile.password === confirmPassword){\r\n//         const result = await signup( \r\n//             userProfile.firstName, userProfile.lastName,\r\n//             userProfile.email, userProfile.phoneNumber, userProfile.password)\r\n//         if(typeof result === 'object'){\r\n//             console.log(result[0])\r\n//             createToken( userProfile.email );\r\n//             localStorage.setItem('currentUser', result[0])\r\n//             setFirstName(userProfile.firstName)\r\n//             setIsOpen( false )\r\n//             setIsLogin( true )\r\n//             setUserProfile({firstName: '', lastName: '', phoneNumber: '',\r\n//                 password:'', email:''});\r\n//             setConfirmPassword('');\r\n//             history.push('/')\r\n\r\n//         }else{\r\n//             setMessage(result)\r\n//             setErrorMessage( true )\r\n//         }\r\n//     } else {\r\n//         setMessage('Confirmation password is not correct')\r\n//         setErrorMessage( true )\r\n//     }\r\n// }\r\n\r\nconst handleModalSubmit = (event) => {\r\n    event.preventDefault();\r\n    if(!userProfile.firstName){\r\n        setMessage('first name is missing')\r\n        setErrorMessage( true )\r\n    } else if (!userProfile.lastName){\r\n        setMessage('last name is missing')\r\n        setErrorMessage( true )\r\n    } else if (!userProfile.phoneNumber){\r\n        setMessage('phone number is missing')\r\n        setErrorMessage( true )\r\n    } else if (!userProfile.email){\r\n        setMessage('email is missing')\r\n        setErrorMessage( true )\r\n    } else if (!userProfile.password){\r\n        setMessage('password is missing')\r\n        setErrorMessage( true )\r\n    } else {\r\n        setLoading( true )\r\n        // checkPassword()\r\n        setLoading(false)\r\n    }\r\n    console.log(userProfile);\r\n    setIsOpen(false);\r\n}\r\n\r\nuseEffect(() => {\r\n    setErrorMessage( false )\r\n}, [])\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          className=\"modal-button btn btn-secondary my-2 my-sm-0 mr-4\"\r\n          type=\"button\"\r\n          onClick={handleModal}\r\n        >\r\n          Sign Up{\" \"}\r\n        </Button>\r\n        <ClipLoader loading={loading} />\r\n        <Modal show={isOpen} onHide={handleModalClose}>\r\n          <Modal.Header>\r\n            <Modal.Title>Create Account</Modal.Title>\r\n            <Button variant=\"light\" onClick={handleModalClose} type=\"button\">\r\n              x\r\n            </Button>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form>\r\n              <Form.Group id=\"firsName\">\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  //   placeholder=\"Your First Name...\"\r\n                  required\r\n                  value={userProfile.firstName}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  //   placeholder=\"Your Last Name...\"\r\n                  name=\"lastName\"\r\n                  value={userProfile.lastName}\r\n                  required\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  className=\"inputs\"\r\n                  type=\"email\"\r\n                  //   placeholder=\"Your Email...\"\r\n                  name=\"email\"\r\n                  value={userProfile.email}\r\n                  required\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group id=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  className=\"inputs\"\r\n                  type=\"password\"\r\n                  //   placeholder=\"Your password.\"\r\n                  name=\"password\"\r\n                  value={userProfile.password}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group id=\"confirmPassword\">\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  className=\"inputs\"\r\n                  type=\"password\"\r\n                  //   placeholder=\"confirm password.\"\r\n                  value={confirmPassword}\r\n                  onChange={(event) => setConfirmPassword(event.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group id=\"phoneNumber\">\r\n                <Form.Label>Phone Number</Form.Label>\r\n                <Form.Control\r\n                  className=\"inputs\"\r\n                  type=\"tel\"\r\n                  //   placeholder=\"Your Phone number...\"\r\n                  name=\"phoneNumber\"\r\n                  value={userProfile.phoneNumber}\r\n                  required\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Button\r\n                className=\"button-log-sign \"\r\n                id=\"sign-in\"\r\n                type=\"submit\"\r\n                onClick={(event) => {\r\n                  handleModalSubmit(event);\r\n                }}\r\n                value=\"Sign Up\"\r\n              >\r\n                Log In\r\n              </Button>\r\n            </Form>\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        {/* <div className=\"sign-up-form\">\r\n          <input\r\n            className=\"sign-up\"\r\n            type=\"submit\"\r\n            onClick={(event) => {\r\n              handleModal(event);\r\n            }}\r\n            value=\"Sign Up\"\r\n          />\r\n\r\n          <Modal\r\n            style={{\r\n              content: {\r\n                width: \"60%\",\r\n                borderRadius: \"20px\",\r\n                display: \"flex\",\r\n                flexFlow: \"row nowrap\",\r\n                alignItems: \"center\",\r\n              },\r\n            }}\r\n            isOpen={isOpen}\r\n          >\r\n            <ClipLoader loading={loading} />\r\n            <form className=\"right-side\">\r\n              <input\r\n                className=\"close\"\r\n                type=\"submit\"\r\n                onClick={(event) => {\r\n                  handleModalClose(event);\r\n                }}\r\n                value=\"x\"\r\n              /> */}\r\n        {/* <h1 className=\"sign-title\">Create Account</h1>\r\n              <div className=\"names\">\r\n                <input\r\n                  id=\"first-name\"\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  placeholder=\"Your First Name...\"\r\n                  required\r\n                  value={userProfile.firstName}\r\n                  onChange={handleChange}\r\n                /> */}\r\n        {/* <input\r\n                  type=\"text\"\r\n                  placeholder=\"Your Last Name...\"\r\n                  name=\"lastName\"\r\n                  value={userProfile.lastName}\r\n                  required\r\n                  onChange={handleChange}\r\n                /> */}\r\n        {/* </div> */}\r\n        {/* <input\r\n                className=\"inputs\"\r\n                type=\"tel\"\r\n                placeholder=\"Your Phone number...\"\r\n                name=\"phoneNumber\"\r\n                value={userProfile.phoneNumber}\r\n                required\r\n                onChange={handleChange}\r\n              />\r\n              <input\r\n                className=\"inputs\"\r\n                type=\"email\"\r\n                placeholder=\"Your Email...\"\r\n                name=\"email\"\r\n                value={userProfile.email}\r\n                required\r\n                onChange={handleChange}\r\n              />\r\n              <input\r\n                className=\"inputs\"\r\n                type=\"password\"\r\n                placeholder=\"Your password.\"\r\n                name=\"password\"\r\n                value={userProfile.password}\r\n                onChange={handleChange}\r\n              />\r\n              <input\r\n                className=\"inputs\"\r\n                type=\"password\"\r\n                placeholder=\"confirm password.\"\r\n                value={confirmPassword}\r\n                onChange={(event) => setConfirmPassword(event.target.value)}\r\n              />\r\n              {errorMessage ? <h3 className=\"error\">{message}</h3> : null}\r\n              <input\r\n                id=\"sign-in\"\r\n                type=\"submit\"\r\n                onClick={(event) => {\r\n                  handleModalSubmit(event);\r\n                }}\r\n                value=\"Sign Up\"\r\n              />\r\n            </form>\r\n          </Modal>\r\n        </div> */}\r\n      </>\r\n    );       \r\n}\r\n\r\nexport default Signup\r\n\r\n","C:\\Users\\naor\\heartwaves-frontend\\src\\components\\Login.jsx",["55","56","57"],"C:\\Users\\naor\\heartwaves-frontend\\src\\index.js",[],["58","59"],"C:\\Users\\naor\\heartwaves-frontend\\src\\components\\Dashboard.jsx",["60"],"C:\\Users\\naor\\heartwaves-frontend\\src\\components\\HomePage.jsx",[],"C:\\Users\\naor\\heartwaves-frontend\\src\\libs\\HeartContext.jsx",[],"C:\\Users\\naor\\heartwaves-frontend\\src\\components\\Home.jsx",["61","62","63"],"C:\\Users\\naor\\heartwaves-frontend\\src\\components\\Result.jsx",["64"],{"ruleId":"65","severity":1,"message":"66","line":7,"column":34,"nodeType":"67","messageId":"68","endLine":7,"endColumn":37},{"ruleId":"65","severity":1,"message":"69","line":12,"column":13,"nodeType":"67","messageId":"68","endLine":12,"endColumn":23},{"ruleId":"65","severity":1,"message":"70","line":12,"column":25,"nodeType":"67","messageId":"68","endLine":12,"endColumn":37},{"ruleId":"65","severity":1,"message":"71","line":13,"column":9,"nodeType":"67","messageId":"68","endLine":13,"endColumn":21},{"ruleId":"65","severity":1,"message":"72","line":18,"column":9,"nodeType":"67","messageId":"68","endLine":18,"endColumn":16},{"ruleId":"65","severity":1,"message":"73","line":19,"column":7,"nodeType":"67","messageId":"68","endLine":19,"endColumn":14},{"ruleId":"74","severity":1,"message":"75","line":93,"column":4,"nodeType":"76","endLine":93,"endColumn":6,"suggestions":"77"},{"ruleId":"65","severity":1,"message":"78","line":1,"column":28,"nodeType":"67","messageId":"68","endLine":1,"endColumn":38},{"ruleId":"65","severity":1,"message":"79","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":18},{"ruleId":"65","severity":1,"message":"80","line":4,"column":10,"nodeType":"67","messageId":"68","endLine":4,"endColumn":22},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"74","severity":1,"message":"85","line":18,"column":8,"nodeType":"76","endLine":18,"endColumn":10,"suggestions":"86"},{"ruleId":"65","severity":1,"message":"87","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"88","line":5,"column":13,"nodeType":"67","messageId":"68","endLine":5,"endColumn":20},{"ruleId":"65","severity":1,"message":"89","line":5,"column":22,"nodeType":"67","messageId":"68","endLine":5,"endColumn":31},{"ruleId":"65","severity":1,"message":"87","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},"no-unused-vars","'_id' is assigned a value but never used.","Identifier","unusedVar","'setIsLogin' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'setFirstName' is assigned a value but never used.","'message' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setErrorMessage'. Either include it or remove the dependency array.","ArrayExpression",["90"],"'useContext' is defined but never used.","'ClipLoader' is defined but never used.","'HeartContext' is defined but never used.","no-native-reassign",["91"],"no-negated-in-lhs",["92"],"React Hook useEffect has a missing dependency: 'userResults'. Either include it or remove the dependency array.",["93"],"'useState' is defined but never used.","'isLogin' is assigned a value but never used.","'firstName' is assigned a value but never used.",{"desc":"94","fix":"95"},"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [setErrorMessage]",{"range":"98","text":"99"},"Update the dependencies array to be: [userResults]",{"range":"100","text":"101"},[3236,3238],"[setErrorMessage]",[514,516],"[userResults]"]